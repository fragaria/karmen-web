@mixin buttonPulse($name, $color) {
  @keyframes button-pulse-#{$name} {
    0% {
      box-shadow: 0 0 0 0px fade-out($color: $color, $amount: 0.2);
    }
    100% {
      box-shadow: 0 0 0 gu(1) fade-out($color: $color, $amount: 1);
    }
  }
  animation: button-pulse-#{$name} 1s infinite;
}

@mixin buttonStyle(
  $name,
  $foreground,
  $background,
  $foregroundHover,
  $backgroundHover,
  $borderColor: $background,
  $borderColorHover: $backgroundHover
) {
  color: $foreground;
  background-color: $background;
  transition: all 0.2s ease-in-out;
  text-transform: uppercase;
  font-family: getFontFamily($bodytype);
  font-weight: 600;
  letter-spacing: 2px;
  cursor: pointer;
  border: 1px solid $borderColor;

  @include fontsize(s2);

  &:hover:not(.button--loading),
  &:focus {
    color: $foregroundHover;
    background-color: $backgroundHover;
    border-color: $borderColorHover;
  }

  &:focus {
    outline: none;
  }

  &:disabled {
    cursor: wait;
  }

  &:disabled:not(.button--loading) {
    background: map-get($palette, gray-dark);
  }

  &.button--loading {
    @include buttonPulse($name, $background);
  }
}

.button,
a.button {
  display: inline-block;
  padding: 0 gu(1);
  line-height: gu(2);
  height: gu(2);
  border: 0;

  @include breakpoint(tablet up) {
    padding: 0 gu(1);
  }

  @include buttonStyle(
    "primary",
    map-get(map-get($button-variants, primary), foreground),
    map-get(map-get($button-variants, primary), background),
    map-get(map-get($button-variants, primary), foregroundHover),
    map-get(map-get($button-variants, primary), backgroundHover),
    map-get(map-get($button-variants, primary), borderColor),
    map-get(map-get($button-variants, primary), borderColorHover),
  );
}

@each $variantName, $variantSettings in $button-variants {
  .button.button--#{$variantName} {
    @include buttonStyle(
      $variantName,
      map-get($variantSettings, foreground),
      map-get($variantSettings, background),
      map-get($variantSettings, foregroundHover),
      map-get($variantSettings, backgroundHover),
      map-get($variantSettings, borderColor),
      map-get($variantSettings, borderColorHover)
    );
  }
}

.button.button--sm {
  padding: 0 gu(.5);
  line-height: gu(1.5);
  height: gu(1.5);
}

.button.button--responsive {
  width: 100%;
  text-align: center;

  @include breakpoint(tablet-tiny up) {
    width: auto;
  }
}

.button.button--full {
  width: 100%;
  text-align: center;
  @include breakpoint(tablet up) {
    width: auto;
    padding-left: gu(3);
    padding-right: gu(3);
  }
}

.button--shifted {
  transform: translateY(gu(-1.5));
}

.button-mt {
  margin-top: gu(1);
}

.button-mb {
  margin-bottom: gu(1);
}

.button--mr {
  margin-right: gu(.75);
}

.button--ml {
  margin-left: gu(.75);
}
